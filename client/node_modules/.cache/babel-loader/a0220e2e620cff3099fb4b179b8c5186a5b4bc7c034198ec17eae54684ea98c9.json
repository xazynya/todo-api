{"ast":null,"code":"var _jsxFileName = \"K:\\\\machine\\\\rest_api\\\\sync\\\\html\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport axios from 'axios';\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:3333/login\";\nconst Login = () => {\n  _s();\n  const [res, setRes] = React.useState(\"\");\n  const [loginStates, setLoginStates] = React.useState(\"\");\n  const onLogin = async (email, userPass) => {\n    setRes('');\n    // ただのjson body が空になる。ので以下を使用\n    const params = new URLSearchParams();\n    params.append('email', email);\n    params.append('password', userPass);\n\n    // Send POST request;\n    const result = await axios.post(BASE_URL, params).then(response => {\n      if (response.data.isSuccess && response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        setLoginStates(true);\n      } else {\n        console.log(\"Failure Login...\");\n        setLoginStates(false);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          element: /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: loggedIn ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 50\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: onLogin,\n      res: res\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"DxLaeDdvpIhN7BwgytAIPgnb/MY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","LoginForm","axios","BrowserRouter","Routes","Route","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","Login","_s","res","setRes","useState","loginStates","setLoginStates","onLogin","email","userPass","params","URLSearchParams","append","result","post","then","response","data","isSuccess","token","localStorage","setItem","console","log","children","path","element","SignIn","fileName","_jsxFileName","lineNumber","columnNumber","loggedIn","Home","replace","to","_c","$RefreshReg$"],"sources":["K:/machine/rest_api/sync/html/client/src/components/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport axios from 'axios';\r\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\r\n\r\nconst BASE_URL = \"http://localhost:3333/login\";\r\n\r\nconst Login = () => {\r\n\r\n    const [res, setRes] = React.useState(\"\");\r\n    const [loginStates, setLoginStates] = React.useState(\"\");\r\n\r\n    const onLogin = async(email, userPass) => {\r\n        setRes('');\r\n        // ただのjson body が空になる。ので以下を使用\r\n        const params = new URLSearchParams();\r\n        params.append('email', email);\r\n        params.append('password', userPass);\r\n\r\n        // Send POST request;\r\n        const result = await axios.post(BASE_URL, params)\r\n        .then(response => {\r\n\r\n            if (response.data.isSuccess && response.data.token) {\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                setLoginStates(true);\r\n            } else {\r\n                console.log(\"Failure Login...\");\r\n                setLoginStates(false);\r\n            }\r\n        })\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <BrowserRouter>\r\n            <Routes>\r\n            <Route path=\"/signin\" element={<SignIn />} />\r\n            <Route path=\"/\" element={ loggedIn ? <Home /> : <Navigate replace to=\"/signin\" />}/>\r\n            </Routes>\r\n        </BrowserRouter>\r\n\r\n        <LoginForm onLogin={onLogin} res={res} />\r\n        </>\r\n    )\r\n\r\n\r\n}\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}