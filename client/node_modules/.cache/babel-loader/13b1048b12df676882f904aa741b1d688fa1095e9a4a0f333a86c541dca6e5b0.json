{"ast":null,"code":"var _jsxFileName = \"K:\\\\machine\\\\rest_api\\\\sync\\\\html\\\\client\\\\src\\\\Router.js\",\n  _s = $RefreshSig$();\nimport React from 'react'; //Reactを読み込んでいる\n\n//画面遷移で使用する{ BrowserRouter, Route, Switch }を'react-router-dom'から読み込んでいる\nimport { Routes, Route, useLocation } from \"react-router-dom\";\nimport SignupAction from './components/SignupAction'; //作成したpage1.jsを読み込んでいる\nimport Todo from './components/Todo'; //作成したpage1.jsを読み込んでいる\nimport LoginFormAction from './components/LoginFormAction'; //作成したpage1.jsを読み込んでいる\nimport validate from './validate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Router = () => {\n  _s();\n  /**\r\n   * Todo のためのパラメーター取得項目\r\n   */\n  const Validate = new validate();\n  let location = useLocation();\n  let urlnum = location.pathname.replace(\"/\", \"\");\n  let todonum = \"/0\";\n  if (Validate.isNum(urlnum)) {\n    todonum = `/${urlnum}`;\n  }\n  console.log(urlnum);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginFormAction, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignupAction, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: todonum,\n        element: /*#__PURE__*/_jsxDEV(Todo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 48\n        }, this),\n        urlnum: todonum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Router, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Router;\nexport default Router;\nvar _c;\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["React","Routes","Route","useLocation","SignupAction","Todo","LoginFormAction","validate","jsxDEV","_jsxDEV","Fragment","_Fragment","Router","_s","Validate","location","urlnum","pathname","replace","todonum","isNum","console","log","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["K:/machine/rest_api/sync/html/client/src/Router.js"],"sourcesContent":["import React from 'react'; //Reactを読み込んでいる\r\n\r\n//画面遷移で使用する{ BrowserRouter, Route, Switch }を'react-router-dom'から読み込んでいる\r\nimport { Routes ,Route ,useLocation } from \"react-router-dom\";\r\nimport SignupAction from './components/SignupAction'; //作成したpage1.jsを読み込んでいる\r\nimport Todo from './components/Todo'; //作成したpage1.jsを読み込んでいる\r\nimport LoginFormAction from './components/LoginFormAction'; //作成したpage1.jsを読み込んでいる\r\nimport validate from './validate';\r\n\r\n\r\nconst Router = () => {\r\n\r\n    /**\r\n     * Todo のためのパラメーター取得項目\r\n     */\r\n    const Validate = new validate();\r\n    let location = useLocation();\r\n    let urlnum = location.pathname.replace(\"/\",\"\");\r\n    let todonum = \"/0\";\r\n    if (Validate.isNum(urlnum)) {\r\n        todonum = `/${urlnum}`;\r\n    }\r\n    console.log(urlnum);\r\n    return (\r\n        <>\r\n            <Routes>\r\n                <Route path=\"/login\" element={<LoginFormAction />} /> \r\n                <Route path=\"/signup\" element={<SignupAction />} />\r\n                <Route path={todonum} element={<Todo />} urlnum={todonum} /> \r\n            </Routes>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Router;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B;AACA,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,YAAY,MAAM,2BAA2B,CAAC,CAAC;AACtD,OAAOC,IAAI,MAAM,mBAAmB,CAAC,CAAC;AACtC,OAAOC,eAAe,MAAM,8BAA8B,CAAC,CAAC;AAC5D,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB;AACJ;AACA;EACI,MAAMC,QAAQ,GAAG,IAAIP,QAAQ,CAAC,CAAC;EAC/B,IAAIQ,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC5B,IAAIa,MAAM,GAAGD,QAAQ,CAACE,QAAQ,CAACC,OAAO,CAAC,GAAG,EAAC,EAAE,CAAC;EAC9C,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIL,QAAQ,CAACM,KAAK,CAACJ,MAAM,CAAC,EAAE;IACxBG,OAAO,GAAI,IAAGH,MAAO,EAAC;EAC1B;EACAK,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACnB,oBACIP,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACId,OAAA,CAACR,MAAM;MAAAsB,QAAA,gBACHd,OAAA,CAACP,KAAK;QAACsB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEhB,OAAA,CAACH,eAAe;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDpB,OAAA,CAACP,KAAK;QAACsB,IAAI,EAAC,SAAS;QAACC,OAAO,eAAEhB,OAAA,CAACL,YAAY;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDpB,OAAA,CAACP,KAAK;QAACsB,IAAI,EAAEL,OAAQ;QAACM,OAAO,eAAEhB,OAAA,CAACJ,IAAI;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAACb,MAAM,EAAEG;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD;EAAC,gBACX,CAAC;AAEX,CAAC;AAAAhB,EAAA,CAtBKD,MAAM;EAAA,QAMOT,WAAW;AAAA;AAAA2B,EAAA,GANxBlB,MAAM;AAwBZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}