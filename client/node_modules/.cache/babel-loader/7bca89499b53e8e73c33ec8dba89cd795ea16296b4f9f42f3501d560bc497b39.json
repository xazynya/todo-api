{"ast":null,"code":"/**\r\n * @classdesc バリデーションクラス\r\n */\nconst escape_html = s => s.replace(/[&'\"<>]/g, m => ({\n  \"&\": \"&amp;\",\n  \"'\": \"&apos;\",\n  '\"': '&quot;',\n  '<': '&lt;',\n  '>': '&gt;'\n})[m]);\nclass Validate {\n  /**\r\n   * \r\n   */\n  constructor() {}\n  /**\r\n   * 入力値をが正の整数であることをチェック\r\n   * @class Validate\r\n   * @method isNum\r\n   * @param {number} uset_id - 整数であること\r\n   * @returns {boolean} - true false のいずれか\r\n   * @since 0.0.1\r\n   * @example\r\n   * // return true\r\n   * isNum(number)\r\n   * // return false\r\n   * isNum('xxxx')\r\n   * isNum(0.001)\r\n   * isNum(-1)\r\n   * isNum(null)\r\n   */\n  isNum(uset_id) {\n    //const isNumber = n => typeof n === \"number\";\n    var uid = parseInt(uset_id);\n    if (Number.isInteger(uid)) {\n      var result = Math.sign(uid) >= 1 ? true : false;\n      return result;\n    } else {\n      return false;\n    }\n  }\n  isEmail(email) {\n    const regex = /^[a-zA-Z0-9_+-]+(\\.[a-zA-Z0-9_+-]+)*@([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]*\\.)+[a-zA-Z]{2,}$/;\n    return regex.test(email);\n  }\n  escapeTag(str) {\n    return escape_html;\n  }\n}\nmodule.exports = new Validate();","map":{"version":3,"names":["escape_html","s","replace","m","Validate","constructor","isNum","uset_id","uid","parseInt","Number","isInteger","result","Math","sign","isEmail","email","regex","test","escapeTag","str","module","exports"],"sources":["K:/machine/rest_api/sync/html/client/src/validate.js"],"sourcesContent":["\r\n/**\r\n * @classdesc バリデーションクラス\r\n */\r\nconst escape_html = s => s.replace(/[&'\"<>]/g, m=>({\r\n    \"&\": \"&amp;\",\r\n    \"'\": \"&apos;\",\r\n    '\"': '&quot;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n})[m] );\r\n\r\nclass Validate\r\n{\r\n    /**\r\n     * \r\n     */\r\n    constructor() {\r\n\r\n    }\r\n    /**\r\n     * 入力値をが正の整数であることをチェック\r\n     * @class Validate\r\n     * @method isNum\r\n     * @param {number} uset_id - 整数であること\r\n     * @returns {boolean} - true false のいずれか\r\n     * @since 0.0.1\r\n     * @example\r\n     * // return true\r\n     * isNum(number)\r\n     * // return false\r\n     * isNum('xxxx')\r\n     * isNum(0.001)\r\n     * isNum(-1)\r\n     * isNum(null)\r\n     */\r\n    isNum (uset_id) {\r\n        //const isNumber = n => typeof n === \"number\";\r\n        var uid = parseInt(uset_id);\r\n        if (Number.isInteger(uid)) {\r\n            var result = (Math.sign(uid) >= 1) ? true : false;\r\n            return result;\r\n        } else {\r\n            return false;\r\n        }\r\n       \r\n    }\r\n\r\n    isEmail (email) {\r\n        const regex = /^[a-zA-Z0-9_+-]+(\\.[a-zA-Z0-9_+-]+)*@([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]*\\.)+[a-zA-Z]{2,}$/;\r\n        return regex.test(email);\r\n    }\r\n\r\n    escapeTag(str) {\r\n        return escape_html\r\n\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = new Validate();"],"mappings":"AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAGC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,UAAU,EAAEC,CAAC,IAAE,CAAC;EAC/C,GAAG,EAAE,OAAO;EACZ,GAAG,EAAE,QAAQ;EACb,GAAG,EAAE,QAAQ;EACb,GAAG,EAAE,MAAM;EACX,GAAG,EAAE;AACT,CAAC,EAAEA,CAAC,CAAE,CAAC;AAEP,MAAMC,QAAQ,CACd;EACI;AACJ;AACA;EACIC,WAAWA,CAAA,EAAG,CAEd;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,KAAKA,CAAEC,OAAO,EAAE;IACZ;IACA,IAAIC,GAAG,GAAGC,QAAQ,CAACF,OAAO,CAAC;IAC3B,IAAIG,MAAM,CAACC,SAAS,CAACH,GAAG,CAAC,EAAE;MACvB,IAAII,MAAM,GAAIC,IAAI,CAACC,IAAI,CAACN,GAAG,CAAC,IAAI,CAAC,GAAI,IAAI,GAAG,KAAK;MACjD,OAAOI,MAAM;IACjB,CAAC,MAAM;MACH,OAAO,KAAK;IAChB;EAEJ;EAEAG,OAAOA,CAAEC,KAAK,EAAE;IACZ,MAAMC,KAAK,GAAG,6FAA6F;IAC3G,OAAOA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EAC5B;EAEAG,SAASA,CAACC,GAAG,EAAE;IACX,OAAOpB,WAAW;EAEtB;AAEJ;AAEAqB,MAAM,CAACC,OAAO,GAAG,IAAIlB,QAAQ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}