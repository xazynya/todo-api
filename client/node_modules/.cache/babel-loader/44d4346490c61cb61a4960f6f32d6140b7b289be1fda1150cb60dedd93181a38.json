{"ast":null,"code":"/*!\n * Connect - session - Session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Expose Session.\n */\nmodule.exports = Session;\n\n/**\n * Create a new `Session` with the given request and `data`.\n *\n * @param {IncomingRequest} req\n * @param {Object} data\n * @api private\n */\n\nfunction Session(req, data) {\n  Object.defineProperty(this, 'req', {\n    value: req\n  });\n  Object.defineProperty(this, 'id', {\n    value: req.sessionID\n  });\n  if (typeof data === 'object' && data !== null) {\n    // merge data into this, ignoring prototype properties\n    for (var prop in data) {\n      if (!(prop in this)) {\n        this[prop] = data[prop];\n      }\n    }\n  }\n}\n\n/**\n * Update reset `.cookie.maxAge` to prevent\n * the cookie from expiring when the\n * session is still active.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'touch', function touch() {\n  return this.resetMaxAge();\n});\n\n/**\n * Reset `.maxAge` to `.originalMaxAge`.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'resetMaxAge', function resetMaxAge() {\n  this.cookie.maxAge = this.cookie.originalMaxAge;\n  return this;\n});\n\n/**\n * Save the session data with optional callback `fn(err)`.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'save', function save(fn) {\n  this.req.sessionStore.set(this.id, this, fn || function () {});\n  return this;\n});\n\n/**\n * Re-loads the session data _without_ altering\n * the maxAge properties. Invokes the callback `fn(err)`,\n * after which time if no exception has occurred the\n * `req.session` property will be a new `Session` object,\n * although representing the same session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'reload', function reload(fn) {\n  var req = this.req;\n  var store = this.req.sessionStore;\n  store.get(this.id, function (err, sess) {\n    if (err) return fn(err);\n    if (!sess) return fn(new Error('failed to load session'));\n    store.createSession(req, sess);\n    fn();\n  });\n  return this;\n});\n\n/**\n * Destroy `this` session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'destroy', function destroy(fn) {\n  delete this.req.session;\n  this.req.sessionStore.destroy(this.id, fn);\n  return this;\n});\n\n/**\n * Regenerate this request's session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'regenerate', function regenerate(fn) {\n  this.req.sessionStore.regenerate(this.req, fn);\n  return this;\n});\n\n/**\n * Helper function for creating a method on a prototype.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} fn\n * @private\n */\nfunction defineMethod(obj, name, fn) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: false,\n    value: fn,\n    writable: true\n  });\n}\n;","map":{"version":3,"names":["module","exports","Session","req","data","Object","defineProperty","value","sessionID","prop","defineMethod","prototype","touch","resetMaxAge","cookie","maxAge","originalMaxAge","save","fn","sessionStore","set","id","reload","store","get","err","sess","Error","createSession","destroy","session","regenerate","obj","name","configurable","enumerable","writable"],"sources":["K:/machine/rest_api/sync/html/client/client/node_modules/express-session/session/session.js"],"sourcesContent":["/*!\n * Connect - session - Session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Expose Session.\n */\n\nmodule.exports = Session;\n\n/**\n * Create a new `Session` with the given request and `data`.\n *\n * @param {IncomingRequest} req\n * @param {Object} data\n * @api private\n */\n\nfunction Session(req, data) {\n  Object.defineProperty(this, 'req', { value: req });\n  Object.defineProperty(this, 'id', { value: req.sessionID });\n\n  if (typeof data === 'object' && data !== null) {\n    // merge data into this, ignoring prototype properties\n    for (var prop in data) {\n      if (!(prop in this)) {\n        this[prop] = data[prop]\n      }\n    }\n  }\n}\n\n/**\n * Update reset `.cookie.maxAge` to prevent\n * the cookie from expiring when the\n * session is still active.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'touch', function touch() {\n  return this.resetMaxAge();\n});\n\n/**\n * Reset `.maxAge` to `.originalMaxAge`.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'resetMaxAge', function resetMaxAge() {\n  this.cookie.maxAge = this.cookie.originalMaxAge;\n  return this;\n});\n\n/**\n * Save the session data with optional callback `fn(err)`.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'save', function save(fn) {\n  this.req.sessionStore.set(this.id, this, fn || function(){});\n  return this;\n});\n\n/**\n * Re-loads the session data _without_ altering\n * the maxAge properties. Invokes the callback `fn(err)`,\n * after which time if no exception has occurred the\n * `req.session` property will be a new `Session` object,\n * although representing the same session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'reload', function reload(fn) {\n  var req = this.req\n  var store = this.req.sessionStore\n\n  store.get(this.id, function(err, sess){\n    if (err) return fn(err);\n    if (!sess) return fn(new Error('failed to load session'));\n    store.createSession(req, sess);\n    fn();\n  });\n  return this;\n});\n\n/**\n * Destroy `this` session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'destroy', function destroy(fn) {\n  delete this.req.session;\n  this.req.sessionStore.destroy(this.id, fn);\n  return this;\n});\n\n/**\n * Regenerate this request's session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'regenerate', function regenerate(fn) {\n  this.req.sessionStore.regenerate(this.req, fn);\n  return this;\n});\n\n/**\n * Helper function for creating a method on a prototype.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} fn\n * @private\n */\nfunction defineMethod(obj, name, fn) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: false,\n    value: fn,\n    writable: true\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}