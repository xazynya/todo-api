{"ast":null,"code":"const Validate = () => {\n  /**\r\n   * @classdesc バリデーションクラス\r\n   */\n  const escape_html = s => s.replace(/[&'\"<>]/g, m => ({\n    \"&\": \"&amp;\",\n    \"'\": \"&apos;\",\n    '\"': '&quot;',\n    '<': '&lt;',\n    '>': '&gt;'\n  })[m]);\n\n  /**\r\n   * 入力値をが正の整数であることをチェック\r\n   * @class Validate\r\n   * @method isNum\r\n   * @param {number} uset_id - 整数であること\r\n   * @returns {boolean} - true false のいずれか\r\n   * @since 0.0.1\r\n   * @example\r\n   * // return true\r\n   * isNum(number)\r\n   * // return false\r\n   * isNum('xxxx')\r\n   * isNum(0.001)\r\n   * isNum(-1)\r\n   * isNum(null)\r\n   */\n  function isNum(uset_id) {\n    //const isNumber = n => typeof n === \"number\";\n    var uid = parseInt(uset_id);\n    if (Number.isInteger(uid)) {\n      var result = Math.sign(uid) >= 1 ? true : false;\n      return result;\n    } else {\n      return false;\n    }\n  }\n  function escapeTag(str) {\n    return escape_html(str);\n  }\n};\n_c = Validate;\nexport default Validate;\nvar _c;\n$RefreshReg$(_c, \"Validate\");","map":{"version":3,"names":["Validate","escape_html","s","replace","m","isNum","uset_id","uid","parseInt","Number","isInteger","result","Math","sign","escapeTag","str","_c","$RefreshReg$"],"sources":["K:/machine/rest_api/sync/html/client/src/validate.js"],"sourcesContent":["\r\nconst Validate = () => {\r\n\r\n\r\n    /**\r\n     * @classdesc バリデーションクラス\r\n     */\r\n    const escape_html = s => s.replace(/[&'\"<>]/g, m=>({\r\n        \"&\": \"&amp;\",\r\n        \"'\": \"&apos;\",\r\n        '\"': '&quot;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n    })[m] );\r\n\r\n\r\n    /**\r\n     * 入力値をが正の整数であることをチェック\r\n     * @class Validate\r\n     * @method isNum\r\n     * @param {number} uset_id - 整数であること\r\n     * @returns {boolean} - true false のいずれか\r\n     * @since 0.0.1\r\n     * @example\r\n     * // return true\r\n     * isNum(number)\r\n     * // return false\r\n     * isNum('xxxx')\r\n     * isNum(0.001)\r\n     * isNum(-1)\r\n     * isNum(null)\r\n     */\r\n    function isNum (uset_id) {\r\n        //const isNumber = n => typeof n === \"number\";\r\n        var uid = parseInt(uset_id);\r\n        if (Number.isInteger(uid)) {\r\n            var result = (Math.sign(uid) >= 1) ? true : false;\r\n            return result;\r\n        } else {\r\n            return false;\r\n        }\r\n       \r\n    }\r\n    function escapeTag(str) {\r\n        return escape_html(str);\r\n    }\r\n\r\n}\r\nexport default Validate;"],"mappings":"AACA,MAAMA,QAAQ,GAAGA,CAAA,KAAM;EAGnB;AACJ;AACA;EACI,MAAMC,WAAW,GAAGC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,UAAU,EAAEC,CAAC,IAAE,CAAC;IAC/C,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE,QAAQ;IACb,GAAG,EAAE,QAAQ;IACb,GAAG,EAAE,MAAM;IACX,GAAG,EAAE;EACT,CAAC,EAAEA,CAAC,CAAE,CAAC;;EAGP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASC,KAAKA,CAAEC,OAAO,EAAE;IACrB;IACA,IAAIC,GAAG,GAAGC,QAAQ,CAACF,OAAO,CAAC;IAC3B,IAAIG,MAAM,CAACC,SAAS,CAACH,GAAG,CAAC,EAAE;MACvB,IAAII,MAAM,GAAIC,IAAI,CAACC,IAAI,CAACN,GAAG,CAAC,IAAI,CAAC,GAAI,IAAI,GAAG,KAAK;MACjD,OAAOI,MAAM;IACjB,CAAC,MAAM;MACH,OAAO,KAAK;IAChB;EAEJ;EACA,SAASG,SAASA,CAACC,GAAG,EAAE;IACpB,OAAOd,WAAW,CAACc,GAAG,CAAC;EAC3B;AAEJ,CAAC;AAAAC,EAAA,GA9CKhB,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}