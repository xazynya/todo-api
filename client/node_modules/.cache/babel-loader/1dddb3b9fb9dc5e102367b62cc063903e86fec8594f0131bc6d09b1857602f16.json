{"ast":null,"code":"var _jsxFileName = \"K:\\\\machine\\\\rest_api\\\\sync\\\\html\\\\client\\\\client\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport TodoInput from \"./TodoInput\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:3333/api\";\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState(null);\n  useEffect(() => {\n    // サーバー側で CORS 対策していないと取得できない。\n    axios.get(BASE_URL + '?user_id=1').then(res => setTodos(res.data));\n  }, []);\n  const onItemCreate = async newItem => {\n    // ただのjson body が空になる。ので以下を使用\n    const params = new URLSearchParams();\n    params.append('user_id', 1);\n    params.append('text', newItem);\n    params.append('complteted', false);\n\n    // Send POST request;\n    const result = await axios.post(BASE_URL, params);\n    console.log(result);\n    setTodos([...todos, {\n      text: newItem,\n      completed: false,\n      uuid: result.data.uuid\n    }]);\n    // Update my front-end\n  };\n\n  const onTodoDelete = async todo => {\n    const payload = {\n      todo_id: todo.todo_id\n    };\n    console.log(payload);\n    await axios.delete(BASE_URL, {\n      data: payload\n    });\n    // update frondt-end\n  };\n  // 空の場合はLoading\n  // useEffect が変数への格納を監視している。\n  if (todos === null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todo,\n      onTodoDelete: onTodoDelete\n    }, todo.uuid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(TodoInput, {\n      onItemCreate: onItemCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"dtn9EFgiMRKD3kLN4K+GZOvuAhI=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","useEffect","axios","TodoInput","Todo","jsxDEV","_jsxDEV","BASE_URL","TodoList","_s","todos","setTodos","get","then","res","data","onItemCreate","newItem","params","URLSearchParams","append","result","post","console","log","text","completed","uuid","onTodoDelete","todo","payload","todo_id","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["K:/machine/rest_api/sync/html/client/client/src/components/TodoList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport TodoInput from \"./TodoInput\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst BASE_URL = \"http://localhost:3333/api\";\r\n\r\n\r\nconst TodoList = () => {\r\nconst [todos, setTodos] = useState(null);\r\n    useEffect(() => {\r\n        // サーバー側で CORS 対策していないと取得できない。\r\n        axios.get(BASE_URL + '?user_id=1')\r\n        .then((res) => setTodos(res.data))\r\n    },[]);\r\n\r\n    const onItemCreate = async (newItem) =>{\r\n\r\n        // ただのjson body が空になる。ので以下を使用\r\n        const params = new URLSearchParams();\r\n        params.append('user_id', 1);\r\n        params.append('text', newItem);\r\n        params.append('complteted', false);\r\n\r\n        // Send POST request;\r\n        const result = await axios.post(BASE_URL, params);\r\n        console.log(result);\r\n        setTodos([...todos, \r\n            {text: newItem, completed: false, uuid: result.data.uuid}])\r\n        // Update my front-end\r\n    }\r\n\r\n\r\n    const onTodoDelete = async (todo) => {\r\n        const payload = {\r\n            todo_id: todo.todo_id\r\n        };\r\n        console.log(payload);\r\n        await axios.delete(BASE_URL, { \r\n            data : payload \r\n            }\r\n        );\r\n        // update frondt-end\r\n    }\r\n    // 空の場合はLoading\r\n    // useEffect が変数への格納を監視している。\r\n    if (todos === null) return <div>Loading</div>;\r\n\r\n    return (\r\n        <div>\r\n            {todos.map(( todo ) => (\r\n                <Todo key={todo.uuid} todo={todo} onTodoDelete={onTodoDelete} />\r\n                )\r\n            )}\r\n            <TodoInput onItemCreate={onItemCreate} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoList;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAG,2BAA2B;AAG5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpCC,SAAS,CAAC,MAAM;IACZ;IACAC,KAAK,CAACU,GAAG,CAACL,QAAQ,GAAG,YAAY,CAAC,CACjCM,IAAI,CAAEC,GAAG,IAAKH,QAAQ,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC;EACtC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,YAAY,GAAG,MAAOC,OAAO,IAAI;IAEnC;IACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IAC3BF,MAAM,CAACE,MAAM,CAAC,MAAM,EAAEH,OAAO,CAAC;IAC9BC,MAAM,CAACE,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;;IAElC;IACA,MAAMC,MAAM,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAACf,QAAQ,EAAEW,MAAM,CAAC;IACjDK,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBV,QAAQ,CAAC,CAAC,GAAGD,KAAK,EACd;MAACe,IAAI,EAAER,OAAO;MAAES,SAAS,EAAE,KAAK;MAAEC,IAAI,EAAEN,MAAM,CAACN,IAAI,CAACY;IAAI,CAAC,CAAC,CAAC;IAC/D;EACJ,CAAC;;EAGD,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;IACjC,MAAMC,OAAO,GAAG;MACZC,OAAO,EAAEF,IAAI,CAACE;IAClB,CAAC;IACDR,OAAO,CAACC,GAAG,CAACM,OAAO,CAAC;IACpB,MAAM5B,KAAK,CAAC8B,MAAM,CAACzB,QAAQ,EAAE;MACzBQ,IAAI,EAAGe;IACP,CACJ,CAAC;IACD;EACJ,CAAC;EACD;EACA;EACA,IAAIpB,KAAK,KAAK,IAAI,EAAE,oBAAOJ,OAAA;IAAA2B,QAAA,EAAK;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE7C,oBACI/B,OAAA;IAAA2B,QAAA,GACKvB,KAAK,CAAC4B,GAAG,CAAGT,IAAI,iBACbvB,OAAA,CAACF,IAAI;MAAiByB,IAAI,EAAEA,IAAK;MAACD,YAAY,EAAEA;IAAa,GAAlDC,IAAI,CAACF,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2C,CAEnE,CAAC,eACD/B,OAAA,CAACH,SAAS;MAACa,YAAY,EAAEA;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAjDID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}