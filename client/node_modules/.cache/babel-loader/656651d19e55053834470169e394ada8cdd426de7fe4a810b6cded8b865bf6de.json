{"ast":null,"code":"var _jsxFileName = \"K:\\\\machine\\\\rest_api\\\\sync\\\\html\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport axios from 'axios';\nimport { redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:3333/login\";\nconst Login = () => {\n  _s();\n  const [res, setRes] = React.useState(\"\");\n  const [loginStates, setLoginStates] = React.useState(\"\");\n  const onLogin = async (email, userPass) => {\n    setRes('');\n    // ただのjson body が空になる。ので以下を使用\n    const params = new URLSearchParams();\n    params.append('email', email);\n    params.append('password', userPass);\n\n    // Send POST request;\n    const result = await axios.post(BASE_URL, params).then(response => {\n      if (response.data.isSuccess && response.data.token) {\n        localStorage.setItem(\"token\", this.props.login.token);\n        setLoginStates(true);\n      } else {\n        console.log(\"Failure Login...\");\n        setLoginStates(false);\n      }\n    });\n  };\n  if (loginStates) {\n    return redirect(\"/2\");\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        onLogin: onLogin,\n        res: res\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n_s(Login, \"DxLaeDdvpIhN7BwgytAIPgnb/MY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","LoginForm","axios","redirect","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","Login","_s","res","setRes","useState","loginStates","setLoginStates","onLogin","email","userPass","params","URLSearchParams","append","result","post","then","response","data","isSuccess","token","localStorage","setItem","props","login","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["K:/machine/rest_api/sync/html/client/src/components/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport axios from 'axios';\r\nimport { redirect  } from \"react-router-dom\";\r\n\r\nconst BASE_URL = \"http://localhost:3333/login\";\r\n\r\nconst Login = () => {\r\n    const [res, setRes] = React.useState(\"\");\r\n    const [loginStates, setLoginStates] = React.useState(\"\");\r\n\r\n    const onLogin = async(email, userPass) => {\r\n        setRes('');\r\n        // ただのjson body が空になる。ので以下を使用\r\n        const params = new URLSearchParams();\r\n        params.append('email', email);\r\n        params.append('password', userPass);\r\n\r\n        // Send POST request;\r\n        const result = await axios.post(BASE_URL, params)\r\n        .then(response => {\r\n\r\n            if (response.data.isSuccess && response.data.token) {\r\n                localStorage.setItem(\"token\", this.props.login.token);\r\n                setLoginStates(true);\r\n            } else {\r\n                console.log(\"Failure Login...\");\r\n                setLoginStates(false);\r\n            }\r\n        })\r\n\r\n\r\n    };\r\n    if (loginStates) {\r\n        return redirect(\"/2\");\r\n    } else {\r\n        return (\r\n\r\n            <>\r\n            <LoginForm onLogin={onLogin} res={res} />\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAS,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,QAAQ,GAAG,6BAA6B;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMG,OAAO,GAAG,MAAAA,CAAMC,KAAK,EAAEC,QAAQ,KAAK;IACtCN,MAAM,CAAC,EAAE,CAAC;IACV;IACA,MAAMO,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAC7BE,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;;IAEnC;IACA,MAAMI,MAAM,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAACf,QAAQ,EAAEW,MAAM,CAAC,CAChDK,IAAI,CAACC,QAAQ,IAAI;MAEd,IAAIA,QAAQ,CAACC,IAAI,CAACC,SAAS,IAAIF,QAAQ,CAACC,IAAI,CAACE,KAAK,EAAE;QAChDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,IAAI,CAACC,KAAK,CAACC,KAAK,CAACJ,KAAK,CAAC;QACrDb,cAAc,CAAC,IAAI,CAAC;MACxB,CAAC,MAAM;QACHkB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/BnB,cAAc,CAAC,KAAK,CAAC;MACzB;IACJ,CAAC,CAAC;EAGN,CAAC;EACD,IAAID,WAAW,EAAE;IACb,OAAOX,QAAQ,CAAC,IAAI,CAAC;EACzB,CAAC,MAAM;IACH,oBAEIE,OAAA,CAAAE,SAAA;MAAA4B,QAAA,eACA9B,OAAA,CAACJ,SAAS;QAACe,OAAO,EAAEA,OAAQ;QAACL,GAAG,EAAEA;MAAI;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,gBACvC,CAAC;EAEX;AAEJ,CAAC;AAAA7B,EAAA,CArCKD,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}