{"ast":null,"code":"var _jsxFileName = \"K:\\\\machine\\\\rest_api\\\\sync\\\\html\\\\client\\\\client\\\\src\\\\Input.js\";\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Input() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      htmlFor: \"inputPassword5\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"password\",\n      id: \"inputPassword5\",\n      \"aria-describedby\": \"passwordHelpBlock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n      id: \"passwordHelpBlock\",\n      muted: true,\n      children: \"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","children","Label","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","id","Text","muted","_c","$RefreshReg$"],"sources":["K:/machine/rest_api/sync/html/client/client/src/Input.js"],"sourcesContent":["import Form from 'react-bootstrap/Form';\r\n\r\nfunction Input() {\r\n    return (\r\n        <>\r\n        <Form.Label htmlFor=\"inputPassword5\">Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          id=\"inputPassword5\"\r\n          aria-describedby=\"passwordHelpBlock\"\r\n        />\r\n        <Form.Text id=\"passwordHelpBlock\" muted>\r\n          Your password must be 8-20 characters long, contain letters and numbers,\r\n          and must not contain spaces, special characters, or emoji.\r\n        </Form.Text>\r\n        </>\r\n);\r\n}\r\n\r\nexport default Input;"],"mappings":";AAAA,OAAOA,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EACb,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACAJ,OAAA,CAACF,IAAI,CAACO,KAAK;MAACC,OAAO,EAAC,gBAAgB;MAAAF,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC1DV,OAAA,CAACF,IAAI,CAACa,OAAO;MACXC,IAAI,EAAC,UAAU;MACfC,EAAE,EAAC,gBAAgB;MACnB,oBAAiB;IAAmB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACFV,OAAA,CAACF,IAAI,CAACgB,IAAI;MAACD,EAAE,EAAC,mBAAmB;MAACE,KAAK;MAAAX,QAAA,EAAC;IAGxC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA,eACV,CAAC;AAEX;AAACM,EAAA,GAfQb,KAAK;AAiBd,eAAeA,KAAK;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}