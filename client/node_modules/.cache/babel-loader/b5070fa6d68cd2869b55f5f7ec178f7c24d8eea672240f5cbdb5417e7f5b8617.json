{"ast":null,"code":"var _jsxFileName = \"K:\\\\machine\\\\rest_api\\\\sync\\\\html\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:3333/login\";\nconst Login = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [res, setRes] = React.useState(\"\");\n  const [loginStates, setLoginStates] = React.useState(\"\");\n  const onLogin = async (email, userPass) => {\n    _s();\n    const navigate = useNavigate();\n    setRes('');\n    // ただのjson body が空になる。ので以下を使用\n    const params = new URLSearchParams();\n    params.append('email', email);\n    params.append('password', userPass);\n\n    // Send POST request;\n    const result = await axios.post(BASE_URL, params).then(response => {\n      if (response.data.isSuccess && response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        setLoginStates(true);\n        navigate(\"/2\");\n      } else {\n        console.log(\"Failure Login...\");\n        setLoginStates(false);\n      }\n    });\n  };\n  _s(onLogin, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: onLogin,\n      res: res\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s2(Login, \"DxLaeDdvpIhN7BwgytAIPgnb/MY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","LoginForm","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","Login","_s2","_s","$RefreshSig$","res","setRes","useState","loginStates","setLoginStates","onLogin","email","userPass","navigate","params","URLSearchParams","append","result","post","then","response","data","isSuccess","token","localStorage","setItem","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["K:/machine/rest_api/sync/html/client/src/components/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst BASE_URL = \"http://localhost:3333/login\";\r\n\r\nconst Login = () => {\r\n\r\n    const [res, setRes] = React.useState(\"\");\r\n    const [loginStates, setLoginStates] = React.useState(\"\");\r\n\r\n    const onLogin = async(email, userPass) => {\r\n        const navigate = useNavigate();\r\n\r\n        setRes('');\r\n        // ただのjson body が空になる。ので以下を使用\r\n        const params = new URLSearchParams();\r\n        params.append('email', email);\r\n        params.append('password', userPass);\r\n\r\n        // Send POST request;\r\n        const result = await axios.post(BASE_URL, params)\r\n        .then(response => {\r\n\r\n            if (response.data.isSuccess && response.data.token) {\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                setLoginStates(true);\r\n                navigate(\"/2\");\r\n            } else {\r\n                console.log(\"Failure Login...\");\r\n                setLoginStates(false);\r\n            }\r\n        })\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <LoginForm onLogin={onLogin} res={res} />\r\n        </>\r\n    )\r\n\r\n\r\n}\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,QAAQ,GAAG,6BAA6B;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEhB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMG,OAAO,GAAG,MAAAA,CAAMC,KAAK,EAAEC,QAAQ,KAAK;IAAAT,EAAA;IACtC,MAAMU,QAAQ,GAAGlB,WAAW,CAAC,CAAC;IAE9BW,MAAM,CAAC,EAAE,CAAC;IACV;IACA,MAAMQ,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,MAAM,CAAC,OAAO,EAAEL,KAAK,CAAC;IAC7BG,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;;IAEnC;IACA,MAAMK,MAAM,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAClB,QAAQ,EAAEc,MAAM,CAAC,CAChDK,IAAI,CAACC,QAAQ,IAAI;MAEd,IAAIA,QAAQ,CAACC,IAAI,CAACC,SAAS,IAAIF,QAAQ,CAACC,IAAI,CAACE,KAAK,EAAE;QAChDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACC,IAAI,CAACE,KAAK,CAAC;QAClDd,cAAc,CAAC,IAAI,CAAC;QACpBI,QAAQ,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACHa,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/BlB,cAAc,CAAC,KAAK,CAAC;MACzB;IACJ,CAAC,CAAC;EACN,CAAC;EAACN,EAAA,CAtBIO,OAAO;IAAA,QACQf,WAAW;EAAA;EAuBhC,oBACIE,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACA/B,OAAA,CAACJ,SAAS;MAACiB,OAAO,EAAEA,OAAQ;MAACL,GAAG,EAAEA;IAAI;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACvC,CAAC;AAIX,CAAC;AAAA9B,GAAA,CApCKD,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}