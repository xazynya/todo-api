{"ast":null,"code":"var _jsxFileName = \"K:\\\\machine\\\\rest_api\\\\sync\\\\html\\\\client\\\\src\\\\components\\\\SignupAction.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from 'axios';\nimport SignUpForm from \"./SignUpForm\";\nimport { Alert } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:3333/signup\";\nconst Signup = () => {\n  _s();\n  const [res, setRes] = React.useState(\"\");\n  const onSignUp = async (email, userName, userPass) => {\n    setRes('');\n    // ただのjson body が空になる。ので以下を使用\n    const params = new URLSearchParams();\n    params.append('email', email);\n    params.append('username', userName);\n    params.append('password', userPass);\n    // Send POST request;\n    const result = await axios.post(BASE_URL, params).then(response => {\n      console.log(response.data);\n      setRes(response.data);\n      if (res.status === \"OK\") {\n        navigate(\"/login\");\n      }\n    });\n  };\n\n  /* res に値が入ったら */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: res.status === \"NG\" && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"warning\",\n        children: \"This is a warning alert\\u2014check it out!\"\n      }, \"warning\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SignUpForm, {\n      onSignUp: onSignUp,\n      res: res\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Signup, \"qtwquUcCP63xbYz071JupzwcIKk=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","axios","SignUpForm","Alert","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","Signup","_s","res","setRes","useState","onSignUp","email","userName","userPass","params","URLSearchParams","append","result","post","then","response","console","log","data","status","navigate","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["K:/machine/rest_api/sync/html/client/src/components/SignupAction.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst BASE_URL = \"http://localhost:3333/signup\";\r\n\r\nconst Signup = () => {\r\n\r\n    const [res, setRes] = React.useState(\"\");\r\n\r\n    const onSignUp = async(email, userName, userPass) => {\r\n        setRes('');\r\n        // ただのjson body が空になる。ので以下を使用\r\n        const params = new URLSearchParams();\r\n        params.append('email', email);\r\n        params.append('username', userName);\r\n        params.append('password', userPass);\r\n        // Send POST request;\r\n        const result = await axios.post(BASE_URL, params)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setRes(response.data);\r\n            if (res.status === \"OK\") {\r\n                navigate(\"/login\");\r\n            }\r\n        })\r\n    }\r\n\r\n    /* res に値が入ったら */\r\n    return (\r\n        <>\r\n        <div>\r\n        {res.status === \"NG\" &&\r\n            <Alert key=\"warning\" variant=\"warning\">\r\n                This is a warning alert—check it out!\r\n            </Alert>\r\n        }\r\n        </div>\r\n        <SignUpForm onSignUp={onSignUp} res={res} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Signup;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,QAAQ,GAAG,8BAA8B;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMC,QAAQ,GAAG,MAAAA,CAAMC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;IACjDL,MAAM,CAAC,EAAE,CAAC;IACV;IACA,MAAMM,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,MAAM,CAAC,OAAO,EAAEL,KAAK,CAAC;IAC7BG,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IACnCE,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IACnC;IACA,MAAMI,MAAM,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAACd,QAAQ,EAAEU,MAAM,CAAC,CAChDK,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1Bf,MAAM,CAACY,QAAQ,CAACG,IAAI,CAAC;MACrB,IAAIhB,GAAG,CAACiB,MAAM,KAAK,IAAI,EAAE;QACrBC,QAAQ,CAAC,QAAQ,CAAC;MACtB;IACJ,CAAC,CAAC;EACN,CAAC;;EAED;EACA,oBACIxB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACAzB,OAAA;MAAAyB,QAAA,EACCnB,GAAG,CAACiB,MAAM,KAAK,IAAI,iBAChBvB,OAAA,CAACH,KAAK;QAAe6B,OAAO,EAAC,SAAS;QAAAD,QAAA,EAAC;MAEvC,GAFW,SAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEP,CAAC,eACN9B,OAAA,CAACJ,UAAU;MAACa,QAAQ,EAAEA,QAAS;MAACH,GAAG,EAAEA;IAAI;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC1C,CAAC;AAGX,CAAC;AAAAzB,EAAA,CApCKD,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAsCZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}