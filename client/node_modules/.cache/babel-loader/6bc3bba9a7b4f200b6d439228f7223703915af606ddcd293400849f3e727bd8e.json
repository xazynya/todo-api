{"ast":null,"code":"/*!\n * express-session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\nvar Store = require('./store');\nvar util = require('util');\n\n/**\n * Shim setImmediate for node.js < 0.10\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function' ? setImmediate : function (fn) {\n  process.nextTick(fn.bind.apply(fn, arguments));\n};\n\n/**\n * Module exports.\n */\n\nmodule.exports = MemoryStore;\n\n/**\n * A session store in memory.\n * @public\n */\n\nfunction MemoryStore() {\n  Store.call(this);\n  this.sessions = Object.create(null);\n}\n\n/**\n * Inherit from Store.\n */\n\nutil.inherits(MemoryStore, Store);\n\n/**\n * Get all active sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.all = function all(callback) {\n  var sessionIds = Object.keys(this.sessions);\n  var sessions = Object.create(null);\n  for (var i = 0; i < sessionIds.length; i++) {\n    var sessionId = sessionIds[i];\n    var session = getSession.call(this, sessionId);\n    if (session) {\n      sessions[sessionId] = session;\n    }\n  }\n  callback && defer(callback, null, sessions);\n};\n\n/**\n * Clear all sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.clear = function clear(callback) {\n  this.sessions = Object.create(null);\n  callback && defer(callback);\n};\n\n/**\n * Destroy the session associated with the given session ID.\n *\n * @param {string} sessionId\n * @public\n */\n\nMemoryStore.prototype.destroy = function destroy(sessionId, callback) {\n  delete this.sessions[sessionId];\n  callback && defer(callback);\n};\n\n/**\n * Fetch session by the given session ID.\n *\n * @param {string} sessionId\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.get = function get(sessionId, callback) {\n  defer(callback, null, getSession.call(this, sessionId));\n};\n\n/**\n * Commit the given session associated with the given sessionId to the store.\n *\n * @param {string} sessionId\n * @param {object} session\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.set = function set(sessionId, session, callback) {\n  this.sessions[sessionId] = JSON.stringify(session);\n  callback && defer(callback);\n};\n\n/**\n * Get number of active sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.length = function length(callback) {\n  this.all(function (err, sessions) {\n    if (err) return callback(err);\n    callback(null, Object.keys(sessions).length);\n  });\n};\n\n/**\n * Touch the given session object associated with the given session ID.\n *\n * @param {string} sessionId\n * @param {object} session\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.touch = function touch(sessionId, session, callback) {\n  var currentSession = getSession.call(this, sessionId);\n  if (currentSession) {\n    // update expiration\n    currentSession.cookie = session.cookie;\n    this.sessions[sessionId] = JSON.stringify(currentSession);\n  }\n  callback && defer(callback);\n};\n\n/**\n * Get session from the store.\n * @private\n */\n\nfunction getSession(sessionId) {\n  var sess = this.sessions[sessionId];\n  if (!sess) {\n    return;\n  }\n\n  // parse\n  sess = JSON.parse(sess);\n  if (sess.cookie) {\n    var expires = typeof sess.cookie.expires === 'string' ? new Date(sess.cookie.expires) : sess.cookie.expires;\n\n    // destroy expired session\n    if (expires && expires <= Date.now()) {\n      delete this.sessions[sessionId];\n      return;\n    }\n  }\n  return sess;\n}","map":{"version":3,"names":["Store","require","util","defer","setImmediate","fn","process","nextTick","bind","apply","arguments","module","exports","MemoryStore","call","sessions","Object","create","inherits","prototype","all","callback","sessionIds","keys","i","length","sessionId","session","getSession","clear","destroy","get","set","JSON","stringify","err","touch","currentSession","cookie","sess","parse","expires","Date","now"],"sources":["K:/machine/rest_api/sync/html/client/client/node_modules/express-session/session/memory.js"],"sourcesContent":["/*!\n * express-session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Store = require('./store')\nvar util = require('util')\n\n/**\n * Shim setImmediate for node.js < 0.10\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Module exports.\n */\n\nmodule.exports = MemoryStore\n\n/**\n * A session store in memory.\n * @public\n */\n\nfunction MemoryStore() {\n  Store.call(this)\n  this.sessions = Object.create(null)\n}\n\n/**\n * Inherit from Store.\n */\n\nutil.inherits(MemoryStore, Store)\n\n/**\n * Get all active sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.all = function all(callback) {\n  var sessionIds = Object.keys(this.sessions)\n  var sessions = Object.create(null)\n\n  for (var i = 0; i < sessionIds.length; i++) {\n    var sessionId = sessionIds[i]\n    var session = getSession.call(this, sessionId)\n\n    if (session) {\n      sessions[sessionId] = session;\n    }\n  }\n\n  callback && defer(callback, null, sessions)\n}\n\n/**\n * Clear all sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.clear = function clear(callback) {\n  this.sessions = Object.create(null)\n  callback && defer(callback)\n}\n\n/**\n * Destroy the session associated with the given session ID.\n *\n * @param {string} sessionId\n * @public\n */\n\nMemoryStore.prototype.destroy = function destroy(sessionId, callback) {\n  delete this.sessions[sessionId]\n  callback && defer(callback)\n}\n\n/**\n * Fetch session by the given session ID.\n *\n * @param {string} sessionId\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.get = function get(sessionId, callback) {\n  defer(callback, null, getSession.call(this, sessionId))\n}\n\n/**\n * Commit the given session associated with the given sessionId to the store.\n *\n * @param {string} sessionId\n * @param {object} session\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.set = function set(sessionId, session, callback) {\n  this.sessions[sessionId] = JSON.stringify(session)\n  callback && defer(callback)\n}\n\n/**\n * Get number of active sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.length = function length(callback) {\n  this.all(function (err, sessions) {\n    if (err) return callback(err)\n    callback(null, Object.keys(sessions).length)\n  })\n}\n\n/**\n * Touch the given session object associated with the given session ID.\n *\n * @param {string} sessionId\n * @param {object} session\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.touch = function touch(sessionId, session, callback) {\n  var currentSession = getSession.call(this, sessionId)\n\n  if (currentSession) {\n    // update expiration\n    currentSession.cookie = session.cookie\n    this.sessions[sessionId] = JSON.stringify(currentSession)\n  }\n\n  callback && defer(callback)\n}\n\n/**\n * Get session from the store.\n * @private\n */\n\nfunction getSession(sessionId) {\n  var sess = this.sessions[sessionId]\n\n  if (!sess) {\n    return\n  }\n\n  // parse\n  sess = JSON.parse(sess)\n\n  if (sess.cookie) {\n    var expires = typeof sess.cookie.expires === 'string'\n      ? new Date(sess.cookie.expires)\n      : sess.cookie.expires\n\n    // destroy expired session\n    if (expires && expires <= Date.now()) {\n      delete this.sessions[sessionId]\n      return\n    }\n  }\n\n  return sess\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}