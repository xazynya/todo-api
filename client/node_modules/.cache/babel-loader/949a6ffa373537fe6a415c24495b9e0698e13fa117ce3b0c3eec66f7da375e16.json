{"ast":null,"code":"var _jsxFileName = \"K:\\\\machine\\\\rest_api\\\\sync\\\\html\\\\client\\\\client\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport TodoInput from \"./TodoInput\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:3333/api\";\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState(null);\n  useEffect(() => {\n    // サーバー側で CORS 対策していないと取得できない。\n    axios.get(BASE_URL + '?user_id=1').then(res => setTodos(res.data));\n  }, []);\n  const onItemCreate = async (newItem, newContent) => {\n    // ただのjson body が空になる。ので以下を使用\n    const params = new URLSearchParams();\n    params.append('user_id', 1);\n    params.append('title', newItem);\n    params.append('content', newContent);\n    params.append('completed', false);\n\n    // Send POST request;\n    const result = await axios.post(BASE_URL, params);\n    setTodos([...todos, {\n      title: newItem,\n      completed: false,\n      uuid: result.data.uuid\n    }]);\n    // Update my front-end\n  };\n\n  const onTodoDelete = async todo => {\n    // update frondt-end\n    await axios.delete(`${BASE_URL}/${todo.uuid}`);\n    const index = todos.findIndex(i => i.uuid === todo.uuid);\n    console.log(todos);\n    setTodos([...todos.slice(0, index), ...todos.slice(index + 1)]);\n    console.log(todos);\n  };\n  const onTodoUpdate = async todo => {\n    // put の場合でもURLSearchParams 使う必要があるみたい。\n    const params = new URLSearchParams();\n    params.append('completed', todo.completed);\n    await axios.put(`${BASE_URL}/${todo.uuid}`, params);\n  };\n  // 空の場合はLoading\n  // useEffect が変数への格納を監視している。\n  if (todos === null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todo,\n      onTodoDelete: onTodoDelete,\n      onTodoUpdate: onTodoUpdate\n    }, todo.uuid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(TodoInput, {\n      onItemCreate: onItemCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"dtn9EFgiMRKD3kLN4K+GZOvuAhI=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","useEffect","axios","TodoInput","Todo","jsxDEV","_jsxDEV","BASE_URL","TodoList","_s","todos","setTodos","get","then","res","data","onItemCreate","newItem","newContent","params","URLSearchParams","append","result","post","title","completed","uuid","onTodoDelete","todo","delete","index","findIndex","i","console","log","slice","onTodoUpdate","put","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["K:/machine/rest_api/sync/html/client/client/src/components/TodoList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport TodoInput from \"./TodoInput\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst BASE_URL = \"http://localhost:3333/api\";\r\n\r\n\r\nconst TodoList = () => {\r\nconst [todos, setTodos] = useState(null);\r\n    useEffect(() => {\r\n        // サーバー側で CORS 対策していないと取得できない。\r\n        axios.get(BASE_URL + '?user_id=1')\r\n        .then((res) => setTodos(res.data))\r\n    },[]);\r\n\r\n    const onItemCreate = async (newItem, newContent) =>{\r\n        // ただのjson body が空になる。ので以下を使用\r\n        const params = new URLSearchParams();\r\n        params.append('user_id', 1);\r\n        params.append('title', newItem);\r\n        params.append('content', newContent);\r\n        params.append('completed', false);\r\n\r\n        // Send POST request;\r\n        const result = await axios.post(BASE_URL, params);\r\n        setTodos([...todos, \r\n            {title: newItem, completed: false, uuid: result.data.uuid}])\r\n        // Update my front-end\r\n    }\r\n\r\n\r\n    const onTodoDelete = async (todo) => {\r\n        // update frondt-end\r\n        await axios.delete(`${BASE_URL}/${todo.uuid}`);\r\n        const index = todos.findIndex((i) => i.uuid  === todo.uuid);\r\n        console.log(todos);\r\n        setTodos([...todos.slice(0, index), ...todos.slice(index + 1 )]);\r\n        console.log(todos);\r\n    }\r\n\r\n    const onTodoUpdate = async (todo) => {\r\n        // put の場合でもURLSearchParams 使う必要があるみたい。\r\n        const params = new URLSearchParams();\r\n        params.append('completed', todo.completed );\r\n\r\n        await axios.put(\r\n            `${BASE_URL}/${todo.uuid}`, \r\n            params\r\n            );\r\n    }\r\n    // 空の場合はLoading\r\n    // useEffect が変数への格納を監視している。\r\n    if (todos === null) return <div>Loading</div>;\r\n\r\n    return (\r\n        <div>\r\n            {todos.map(( todo ) => (\r\n                    <Todo \r\n                        key={todo.uuid} \r\n                        todo={todo} \r\n                        onTodoDelete={onTodoDelete} \r\n                        onTodoUpdate={onTodoUpdate} \r\n                    />\r\n                )\r\n            )}\r\n            <TodoInput onItemCreate={onItemCreate} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}