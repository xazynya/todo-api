{"ast":null,"code":"/*!\n * Connect - session - Store\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\nvar Cookie = require('./cookie');\nvar EventEmitter = require('events').EventEmitter;\nvar Session = require('./session');\nvar util = require('util');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Store;\n\n/**\n * Abstract base class for session stores.\n * @public\n */\n\nfunction Store() {\n  EventEmitter.call(this);\n}\n\n/**\n * Inherit from EventEmitter.\n */\n\nutil.inherits(Store, EventEmitter);\n\n/**\n * Re-generate the given requests's session.\n *\n * @param {IncomingRequest} req\n * @return {Function} fn\n * @api public\n */\n\nStore.prototype.regenerate = function (req, fn) {\n  var self = this;\n  this.destroy(req.sessionID, function (err) {\n    self.generate(req);\n    fn(err);\n  });\n};\n\n/**\n * Load a `Session` instance via the given `sid`\n * and invoke the callback `fn(err, sess)`.\n *\n * @param {String} sid\n * @param {Function} fn\n * @api public\n */\n\nStore.prototype.load = function (sid, fn) {\n  var self = this;\n  this.get(sid, function (err, sess) {\n    if (err) return fn(err);\n    if (!sess) return fn();\n    var req = {\n      sessionID: sid,\n      sessionStore: self\n    };\n    fn(null, self.createSession(req, sess));\n  });\n};\n\n/**\n * Create session from JSON `sess` data.\n *\n * @param {IncomingRequest} req\n * @param {Object} sess\n * @return {Session}\n * @api private\n */\n\nStore.prototype.createSession = function (req, sess) {\n  var expires = sess.cookie.expires;\n  var originalMaxAge = sess.cookie.originalMaxAge;\n  sess.cookie = new Cookie(sess.cookie);\n  if (typeof expires === 'string') {\n    // convert expires to a Date object\n    sess.cookie.expires = new Date(expires);\n  }\n\n  // keep originalMaxAge intact\n  sess.cookie.originalMaxAge = originalMaxAge;\n  req.session = new Session(req, sess);\n  return req.session;\n};","map":{"version":3,"names":["Cookie","require","EventEmitter","Session","util","module","exports","Store","call","inherits","prototype","regenerate","req","fn","self","destroy","sessionID","err","generate","load","sid","get","sess","sessionStore","createSession","expires","cookie","originalMaxAge","Date","session"],"sources":["K:/machine/rest_api/sync/html/client/client/node_modules/express-session/session/store.js"],"sourcesContent":["/*!\n * Connect - session - Store\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Cookie = require('./cookie')\nvar EventEmitter = require('events').EventEmitter\nvar Session = require('./session')\nvar util = require('util')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Store\n\n/**\n * Abstract base class for session stores.\n * @public\n */\n\nfunction Store () {\n  EventEmitter.call(this)\n}\n\n/**\n * Inherit from EventEmitter.\n */\n\nutil.inherits(Store, EventEmitter)\n\n/**\n * Re-generate the given requests's session.\n *\n * @param {IncomingRequest} req\n * @return {Function} fn\n * @api public\n */\n\nStore.prototype.regenerate = function(req, fn){\n  var self = this;\n  this.destroy(req.sessionID, function(err){\n    self.generate(req);\n    fn(err);\n  });\n};\n\n/**\n * Load a `Session` instance via the given `sid`\n * and invoke the callback `fn(err, sess)`.\n *\n * @param {String} sid\n * @param {Function} fn\n * @api public\n */\n\nStore.prototype.load = function(sid, fn){\n  var self = this;\n  this.get(sid, function(err, sess){\n    if (err) return fn(err);\n    if (!sess) return fn();\n    var req = { sessionID: sid, sessionStore: self };\n    fn(null, self.createSession(req, sess))\n  });\n};\n\n/**\n * Create session from JSON `sess` data.\n *\n * @param {IncomingRequest} req\n * @param {Object} sess\n * @return {Session}\n * @api private\n */\n\nStore.prototype.createSession = function(req, sess){\n  var expires = sess.cookie.expires\n  var originalMaxAge = sess.cookie.originalMaxAge\n\n  sess.cookie = new Cookie(sess.cookie);\n\n  if (typeof expires === 'string') {\n    // convert expires to a Date object\n    sess.cookie.expires = new Date(expires)\n  }\n\n  // keep originalMaxAge intact\n  sess.cookie.originalMaxAge = originalMaxAge\n\n  req.session = new Session(req, sess);\n  return req.session;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,YAAY,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,YAAY;AACjD,IAAIC,OAAO,GAAGF,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;;AAE1B;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGC,KAAK;;AAEtB;AACA;AACA;AACA;;AAEA,SAASA,KAAKA,CAAA,EAAI;EAChBL,YAAY,CAACM,IAAI,CAAC,IAAI,CAAC;AACzB;;AAEA;AACA;AACA;;AAEAJ,IAAI,CAACK,QAAQ,CAACF,KAAK,EAAEL,YAAY,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAK,KAAK,CAACG,SAAS,CAACC,UAAU,GAAG,UAASC,GAAG,EAAEC,EAAE,EAAC;EAC5C,IAAIC,IAAI,GAAG,IAAI;EACf,IAAI,CAACC,OAAO,CAACH,GAAG,CAACI,SAAS,EAAE,UAASC,GAAG,EAAC;IACvCH,IAAI,CAACI,QAAQ,CAACN,GAAG,CAAC;IAClBC,EAAE,CAACI,GAAG,CAAC;EACT,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAV,KAAK,CAACG,SAAS,CAACS,IAAI,GAAG,UAASC,GAAG,EAAEP,EAAE,EAAC;EACtC,IAAIC,IAAI,GAAG,IAAI;EACf,IAAI,CAACO,GAAG,CAACD,GAAG,EAAE,UAASH,GAAG,EAAEK,IAAI,EAAC;IAC/B,IAAIL,GAAG,EAAE,OAAOJ,EAAE,CAACI,GAAG,CAAC;IACvB,IAAI,CAACK,IAAI,EAAE,OAAOT,EAAE,CAAC,CAAC;IACtB,IAAID,GAAG,GAAG;MAAEI,SAAS,EAAEI,GAAG;MAAEG,YAAY,EAAET;IAAK,CAAC;IAChDD,EAAE,CAAC,IAAI,EAAEC,IAAI,CAACU,aAAa,CAACZ,GAAG,EAAEU,IAAI,CAAC,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAf,KAAK,CAACG,SAAS,CAACc,aAAa,GAAG,UAASZ,GAAG,EAAEU,IAAI,EAAC;EACjD,IAAIG,OAAO,GAAGH,IAAI,CAACI,MAAM,CAACD,OAAO;EACjC,IAAIE,cAAc,GAAGL,IAAI,CAACI,MAAM,CAACC,cAAc;EAE/CL,IAAI,CAACI,MAAM,GAAG,IAAI1B,MAAM,CAACsB,IAAI,CAACI,MAAM,CAAC;EAErC,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;IAC/B;IACAH,IAAI,CAACI,MAAM,CAACD,OAAO,GAAG,IAAIG,IAAI,CAACH,OAAO,CAAC;EACzC;;EAEA;EACAH,IAAI,CAACI,MAAM,CAACC,cAAc,GAAGA,cAAc;EAE3Cf,GAAG,CAACiB,OAAO,GAAG,IAAI1B,OAAO,CAACS,GAAG,EAAEU,IAAI,CAAC;EACpC,OAAOV,GAAG,CAACiB,OAAO;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}